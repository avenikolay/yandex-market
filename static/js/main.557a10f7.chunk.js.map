{"version":3,"sources":["components/Product/Product.js","components/Products/Products.js","App.js","serviceWorker.js","index.js"],"names":["Product","discount","price","product","className","Math","round","src","img","alt","title","products","id","Products","map","key","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6RAGe,SAASA,EAAT,GAA6B,IACpCC,EAAUC,EADeC,EAAU,EAAVA,QAS7B,OAPIA,EAAQF,UACRA,EAAW,yBAAKG,UAAU,qBAAsBD,EAAQF,SAA7C,MACXC,EAAQG,KAAKC,MAAMH,EAAQD,MAASC,EAAQD,MAAQ,IAAMC,EAAQF,YAElEA,GAAW,EACXC,EAAQC,EAAQD,OAGhB,yBAAKE,UAAU,WACTH,EACF,yBAAKG,UAAU,wBACX,yBAAKA,UAAU,eAAeG,IAAMJ,EAAQK,IAAMC,IAAMN,EAAQO,SAEpE,yBAAKN,UAAU,kBACX,0BAAMA,UAAU,0BACVF,EADN,WAGED,GAAY,0BAAMG,UAAU,2BAAhB,IAA6CD,EAAQD,MAArD,aAElB,yBAAKE,UAAU,kBACTD,EAAQO,Q,UCrBpBC,EAAW,CACb,CAACC,GAAI,EAAGF,MAAO,wEAAiCR,MAAO,KACvDD,SAAU,GAAIO,IAAK,4FACnB,CAACI,GAAI,EAAGF,MAAO,kPAAgDR,MAAO,IAAKM,IAAK,4FAChF,CAACI,GAAI,EAAGF,MAAO,kHAAsER,MAAO,KAAMD,SAAU,EAAGO,IAAK,2FACpH,CAACI,GAAI,EAAGF,MAAO,iPAAoDR,MAAO,GAAIM,IAAK,2FACnF,CAACI,GAAI,EAAGF,MAAO,sEAA+BR,MAAO,KAAMM,IAAK,6FAErD,SAASK,IACpB,OACI,yBAAKT,UAAU,YACX,wBAAIA,UAAU,mBAAd,qLACA,yBAAKA,UAAU,kBACTO,EAASG,KAAI,SAAAX,GAAO,OAAI,kBAAC,EAAD,CAASY,IAAMZ,EAAQS,GAAKT,QAAUA,SCLjEa,MARf,WACE,OACE,yBAAKZ,UAAU,OACb,kBAAC,EAAD,QCKca,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.557a10f7.chunk.js","sourcesContent":["import React from 'react';\nimport './Product.css';\n\nexport default function Product({product}) {\n    let discount, price;\n    if (product.discount) {\n        discount = <div className=\"product__discount\">{ product.discount } %</div>;\n        price = Math.round(product.price - (product.price / 100 * product.discount));\n      } else {\n        discount = false;\n        price = product.price;\n      }\n    return (\n        <div className=\"product\">\n            { discount }\n            <div className=\"product__img-wrapper\">\n                <img className=\"product__img\" src={ product.img } alt={ product.title }/>\n            </div>\n            <div className=\"product__price\">\n                <span className=\"product__price-current\">\n                    { price } ₽\n                </span>\n                { discount && <span className=\"product__price-original\"> { product.price }  ₽</span> }\n            </div>\n            <div className=\"product__title\">\n                { product.title }\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport Product from '../Product/Product';\nimport './Products.css';\n\nconst products = [\n    {id: 1, title: 'Наушники JBL Endurance SPRINT', price: 1949,\n    discount: 10, img: 'https://avatars.mds.yandex.net/get-mpic/1246680/img_id1113703500810441195.jpeg/x166_trim'},\n    {id: 2, title: 'Вода минеральная Сенежская газированная, ПЭТ', price: 115, img: 'https://avatars.mds.yandex.net/get-mpic/1081556/img_id5545254895440196313.jpeg/x166_trim'},\n    {id: 3, title: 'Протеин Optimum Nutrition 100% Whey Gold Standard (2.225-2.353 кг)', price: 3250, discount: 7, img: 'https://avatars.mds.yandex.net/get-mpic/1525215/img_id2795445143072269737.png/x166_trim'},\n    {id: 4, title: 'Bref туалетный блок Сила-Актив Лимонная свежесть', price: 83, img: 'https://avatars.mds.yandex.net/get-mpic/331398/img_id8606275073732889790.jpeg/x166_trim'},\n    {id: 5, title: 'Наушники JBL Endurance DIVE', price: 2990, img: 'https://avatars.mds.yandex.net/get-mpic/1363210/img_id9091164100103917756.jpeg/x166_trim'},\n];\nexport default function Products() {\n    return (\n        <div className=\"products\">\n            <h1 className=\"products__title\">Приглядитесь к этим предложениям</h1>\n            <div className=\"products__list\">\n                { products.map(product => <Product key={ product.id } product={ product } />) }\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport Products from './components/Products/Products';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Products />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}